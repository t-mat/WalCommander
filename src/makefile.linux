INSTALL_DIR = install -d
INSTALL_PROGRAM = install -c -m 755
INSTALL_TREE = cp -R

ifeq ($(INSTALL_TO),)
BIN_DIR=$(DESTDIR)/usr/bin
TARGET_DIR=$(DESTDIR)/usr/
else
BIN_DIR=$(INSTALL_TO)
TARGET_DIR=$(INSTALL_TO)
endif

WCM_VERSION=$(shell ./get_wcm_version.sh)

CFLAGS= -D_FILE_OFFSET_BITS=64 -I /usr/local/include -O3 -Wall -Wextra -Wno-unknown-pragmas -Wno-unused-parameter -Wno-sign-compare -Wno-unused-variable -I wal -I swl $(CFLAGS_FREETYPE) -I/usr/src/contrib/libstdc++/include/backward
#CFLAGS= -D_FILE_OFFSET_BITS=64 -I /usr/local/include -g -O1 -fno-inline -I wal -I swl -pthread $(CFLAGS_FREETYPE)

UNAME_S := $(shell uname -s)

$(info $(UNAME_S))

ifeq ($(UNAME_S),Darwin)
# make it buildable with XQuartz
CFLAGS += -I /opt/X11/include
CFLAGS += -Wno-logical-op-parentheses -Wno-bitwise-op-parentheses
CFLAGS_FREETYPE = -I /opt/X11/include/freetype2 -D USEFREETYPE
LIBFREETYPE = -l freetype
else
CFLAGS += -pthread
CFLAGS += -Wno-unused-parameter
LIBSMB = -l smbclient
LIBSSH = -l ssh2 
LIBFREETYPE = -l freetype
ifeq ($(UNAME_S),OpenBSD)
CFLAGS_FREETYPE = -I /usr/X11R6/include -I /usr/X11R6/include/freetype2 -D USEFREETYPE
else
CFLAGS_FREETYPE = -I /usr/include/freetype2 -I /usr/local/include/freetype2 -D USEFREETYPE
endif
endif

LIBS = -L /usr/local/lib -L /usr/X11R6/lib -l  X11 -l pthread $(LIBSMB) $(LIBSSH) $(LIBFREETYPE)
ifeq ($(UNAME_S),OpenBSD)
LIBS += -l estdc++
else
LIBS += -l stdc++
endif

HW = \
	src/wal/wal_tmpls.h \
	src/wal/wal.h \
	src/wal/wal_sys_api.h

HS = \
	src/swl/swl.h \
	src/swl/swl_internal.h \
	src/swl/swl_layout.h \
	src/swl/swl_winbase.h \
	src/swl/swl_wincore.h \
	src/swl/swl_wincore_internal.h 

HN = \
	src/libconf.h \
	src/nc.h \
	src/ncwin.h \
	src/panel.h \
	src/ncdialogs.h \
	src/terminal.h \
	src/termwin.h \
	src/ncedit.h \
	src/nchistory.h \
	src/shell.h \
	src/operthread.h \
	src/operwin.h \
	src/vfs.h \
	src/vfspath.h \
	src/vfs-smb.h \
	src/vfs-tmp.h \
	src/vfs-uri.h \
	src/fileopers.h \
	src/mfile.h \
	src/eloadsave.h \
	src/smblogon.h \
	src/ext-app.h \
	src/wcm-config.h \
	src/panel_list.h \
	src/tcp_sock.h \
	src/vfs-ftp.h \
	src/ftplogon.h \
	src/charsetdlg.h \
	src/vfs-sftp.h \
	src/sftpdlg.h \
	src/color-style.h \
	src/filesearch.h \
	src/help.h \
	src/ux_util.h \
	src/strconfig.h \
	src/path-list.h \
	src/folder-shortcuts.h \
	src/folder-history.h \
	src/nceditline.h \
	src/fontdlg.h \
	src/ncfonts.h \
	src/shl.h \
	src/toolbar.h \
	src/ncview.h \
	src/search-dlg.h \
	src/search-tools.h \
	src/shell-tools.h \
	src/t-emulator.h \
	src/dircalc.h \
	src/ltext.h

CFLAGS += -I src -I src/wal -I src/swl

COPTS += -I swl -std=c++11
#CC = clang
CC ?= gcc

# COPTS += -I swl -Wno-parentheses -fsanitize=address -g
# -fsanitize=address -fsanitize=integer -fsanitize=thread -fsanitize=undefined
 
OBJDIR = obj

OBJS = \
	$(OBJDIR)/charsetdlg.o \
	$(OBJDIR)/color-style.o\
	$(OBJDIR)/dircalc.o \
	$(OBJDIR)/dlg-ctrl-l.o \
	$(OBJDIR)/eloadsave.o \
	$(OBJDIR)/ext-app-ux.o \
	$(OBJDIR)/fileassociations.o \
	$(OBJDIR)/fileattributes.o \
	$(OBJDIR)/filehighlighting.o \
	$(OBJDIR)/fileopers.o \
	$(OBJDIR)/filesearch.o\
	$(OBJDIR)/fontdlg.o \
	$(OBJDIR)/ftplogon.o \
	$(OBJDIR)/globals.o \
	$(OBJDIR)/help.o\
	$(OBJDIR)/helpres.o\
	$(OBJDIR)/ltext.o \
	$(OBJDIR)/ncdialogs.o \
	$(OBJDIR)/ncedit.o \
	$(OBJDIR)/ncfonts.o \
	$(OBJDIR)/nchistory.o \
	$(OBJDIR)/ncview.o \
	$(OBJDIR)/ncwin.o \
	$(OBJDIR)/operthread.o \
	$(OBJDIR)/operwin.o \
	$(OBJDIR)/panel.o \
	$(OBJDIR)/panel_list.o \
	$(OBJDIR)/search-dlg.o \
	$(OBJDIR)/search-tools.o \
	$(OBJDIR)/sftpdlg.o \
	$(OBJDIR)/shell-tools.o \
	$(OBJDIR)/shell.o \
	$(OBJDIR)/shl.o \
	$(OBJDIR)/path-list.o \
	$(OBJDIR)/folder-shortcuts.o \
	$(OBJDIR)/folder-history.o \
	$(OBJDIR)/nceditline.o \
	$(OBJDIR)/smblogon.o \
	$(OBJDIR)/strconfig.o \
	$(OBJDIR)/strmasks.o \
	$(OBJDIR)/swl_button.o \
	$(OBJDIR)/swl_combobox.o  \
	$(OBJDIR)/swl_editline.o  \
	$(OBJDIR)/swl_layout.o    \
	$(OBJDIR)/swl_menubox.o    \
	$(OBJDIR)/swl_menutextinfo.o \
	$(OBJDIR)/swl_popupmenu.o   \
	$(OBJDIR)/swl_sbutton.o     \
	$(OBJDIR)/swl_scrollbar.o   \
	$(OBJDIR)/swl_staticlabel.o   \
	$(OBJDIR)/swl_textlist.o    \
	$(OBJDIR)/swl_vlist.o       \
	$(OBJDIR)/swl_winbase.o     \
	$(OBJDIR)/swl_wincore.o     \
	$(OBJDIR)/swl_wincoreUX.o \
	$(OBJDIR)/t-emulator.o \
	$(OBJDIR)/tcp_sock.o \
	$(OBJDIR)/terminal.o \
	$(OBJDIR)/termwin.o \
	$(OBJDIR)/toolbar.o \
	$(OBJDIR)/unicode_lc.o \
	$(OBJDIR)/usermenu.o \
	$(OBJDIR)/ux_util.o\
	$(OBJDIR)/vfs-ftp.o \
	$(OBJDIR)/vfs-sftp2.o \
	$(OBJDIR)/vfs-smb.o \
	$(OBJDIR)/vfs-tmp.o \
	$(OBJDIR)/vfs-uri.o \
	$(OBJDIR)/vfs.o \
	$(OBJDIR)/vfspath.o \
	$(OBJDIR)/wal.o\
	$(OBJDIR)/wal_charset.o\
	$(OBJDIR)/wal_exceptions.o\
	$(OBJDIR)/wal_files.o\
	$(OBJDIR)/wal_sys_api.o\
	$(OBJDIR)/wal_tmpls.o \
	$(OBJDIR)/wcm-config.o \
	$(OBJDIR)/utf8proc.o \
	$(OBJDIR)/LUrlParser.o

ifeq ($(UNAME_S),Darwin)
all: wcm
else
all: libconf_ux.h wcm
#	cat info.txt
endif

build: all

libconf_ux.h: src/libtester/libconf.create
	cd src/libtester &&	. ./libconf.create

wcm:   $(OBJS) $(OBJDIR)/nc.o  $(OBJDIR)/panel.o 
	$(CC) $(CFLAGS)  -o wcm -pipe   $(OBJDIR)/nc.o  $(OBJS) $(LIBS) $(COPTS)
	
#libconf.h: libtester/libconf.create
#	cd libtester &&	./libconf.create


$(OBJDIR)/utf8proc.o: $(HW) $(HS) $(HN) src/utf8proc/utf8proc.c 
	$(CC) -I uft8/proc -std=c99 -c $(CFLAGS) -Wno-missing-field-initializers src/utf8proc/utf8proc.c -o $(OBJDIR)/utf8proc.o

$(OBJDIR)/LUrlParser.o: $(HW) $(HS) $(HN) src/urlparser/LUrlParser.cpp
	$(CC) $(COPTS) -c $(CFLAGS) src/urlparser/LUrlParser.cpp -o $(OBJDIR)/LUrlParser.o

$(OBJDIR)/dircalc.o: $(HW) $(HS) $(HN) src/dircalc.cpp 
	$(CC) $(COPTS) -c $(CFLAGS) src/dircalc.cpp -o $(OBJDIR)/dircalc.o

$(OBJDIR)/dlg-ctrl-l.o: $(HW) $(HS) $(HN) src/dlg-ctrl-l.cpp
	$(CC) $(COPTS) -c $(CFLAGS) src/dlg-ctrl-l.cpp -o $(OBJDIR)/dlg-ctrl-l.o

$(OBJDIR)/globals.o: $(HW) $(HS) $(HN) src/globals.cpp
	$(CC) $(COPTS) -c $(CFLAGS) src/globals.cpp -o $(OBJDIR)/globals.o

$(OBJDIR)/ncvfs.o: $(HW) $(HS) $(HN) src/ncvfs.cpp 
	$(CC) $(COPTS) -c $(CFLAGS) src/ncvfs.cpp -o $(OBJDIR)/ncvfs.o
	
$(OBJDIR)/eloadsave.o: $(HW) $(HS) $(HN) src/eloadsave.cpp 
	$(CC) $(COPTS) -c $(CFLAGS) src/eloadsave.cpp -o $(OBJDIR)/eloadsave.o

$(OBJDIR)/smblogon.o: $(HW) $(HS) $(HN) src/smblogon.cpp 
	$(CC) $(COPTS) -c $(CFLAGS) src/smblogon.cpp -o $(OBJDIR)/smblogon.o

$(OBJDIR)/ftplogon.o: $(HW) $(HS) $(HN) src/ftplogon.cpp 
	$(CC) $(COPTS) -c $(CFLAGS) src/ftplogon.cpp -o $(OBJDIR)/ftplogon.o
	
$(OBJDIR)/sftpdlg.o: $(HW) $(HS) $(HN) src/sftpdlg.cpp 
	$(CC) $(COPTS) -c $(CFLAGS) src/sftpdlg.cpp -o $(OBJDIR)/sftpdlg.o
	
$(OBJDIR)/ext-app.o: $(HW) $(HS) $(HN) src/ext-app.cpp 
	$(CC) $(COPTS) -c $(CFLAGS) src/ext-app.cpp -o $(OBJDIR)/ext-app.o

$(OBJDIR)/ext-app-ux.o: $(HW) $(HS) $(HN) src/ext-app-ux.cpp 
	$(CC) $(COPTS) -c $(CFLAGS) src/ext-app-ux.cpp -o $(OBJDIR)/ext-app-ux.o

				
$(OBJDIR)/operthread.o: $(HW) $(HS) $(HN) src/operthread.cpp 
	$(CC) $(COPTS) -c $(CFLAGS) src/operthread.cpp -o $(OBJDIR)/operthread.o
	
$(OBJDIR)/operwin.o: $(HW) $(HS) $(HN) src/operwin.cpp 
	$(CC) $(COPTS) -c $(CFLAGS) src/operwin.cpp -o $(OBJDIR)/operwin.o

$(OBJDIR)/wcm-config.o: $(HW) $(HS) $(HN) src/wcm-config.cpp 
	$(CC) $(COPTS) -c $(CFLAGS) src/wcm-config.cpp -o $(OBJDIR)/wcm-config.o
	
$(OBJDIR)/color-style.o: $(HW) $(HS) $(HN) src/color-style.cpp 
	$(CC) $(COPTS) -c $(CFLAGS) src/color-style.cpp -o $(OBJDIR)/color-style.o

$(OBJDIR)/filesearch.o: $(HW) $(HS) $(HN) src/filesearch.cpp 
	$(CC) $(COPTS) -c $(CFLAGS) src/filesearch.cpp -o $(OBJDIR)/filesearch.o
	
$(OBJDIR)/fontdlg.o: $(HW) $(HS) $(HN) src/fontdlg.cpp
	$(CC) $(COPTS) -c $(CFLAGS) src/fontdlg.cpp -o $(OBJDIR)/fontdlg.o
	
$(OBJDIR)/help.o: $(HW) $(HS) $(HN) src/help.cpp 
	$(CC) $(COPTS) -c $(CFLAGS) src/help.cpp -o $(OBJDIR)/help.o
	
$(OBJDIR)/helpres.o: $(HW) $(HS) $(HN) src/helpres.cpp 
	$(CC) $(COPTS) -c $(CFLAGS) src/helpres.cpp -o $(OBJDIR)/helpres.o

$(OBJDIR)/ltext.o: $(HW) $(HS) $(HN) src/ltext.cpp 
	$(CC) $(COPTS) -c $(CFLAGS) src/ltext.cpp -o $(OBJDIR)/ltext.o
	
$(OBJDIR)/ncfonts.o: $(HW) $(HS) $(HN) src/ncfonts.cpp 
	$(CC) $(COPTS) -c $(CFLAGS) src/ncfonts.cpp -o $(OBJDIR)/ncfonts.o
	
$(OBJDIR)/path-list.o: $(HW) $(HS) $(HN) src/path-list.cpp 
	$(CC) $(COPTS) -c $(CFLAGS) src/path-list.cpp -o $(OBJDIR)/path-list.o

$(OBJDIR)/folder-shortcuts.o: $(HW) $(HS) $(HN) src/folder-shortcuts.cpp 
	$(CC) $(COPTS) -c $(CFLAGS) src/folder-shortcuts.cpp -o $(OBJDIR)/folder-shortcuts.o

$(OBJDIR)/folder-history.o: $(HW) $(HS) $(HN) src/folder-history.cpp 
	$(CC) $(COPTS) -c $(CFLAGS) src/folder-history.cpp -o $(OBJDIR)/folder-history.o

$(OBJDIR)/nceditline.o: $(HW) $(HS) $(HN) src/nceditline.cpp 
	$(CC) $(COPTS) -c $(CFLAGS) src/nceditline.cpp -o $(OBJDIR)/nceditline.o

$(OBJDIR)/fileassociations.o: $(HW) $(HS) $(HN) src/fileassociations.cpp 
	$(CC) $(COPTS) -c $(CFLAGS) src/fileassociations.cpp -o $(OBJDIR)/fileassociations.o

$(OBJDIR)/fileattributes.o: $(HW) $(HS) $(HN) src/fileattributes.cpp 
	$(CC) $(COPTS) -c $(CFLAGS) src/fileattributes.cpp -o $(OBJDIR)/fileattributes.o

$(OBJDIR)/filehighlighting.o: $(HW) $(HS) $(HN) src/filehighlighting.cpp 
	$(CC) $(COPTS) -c $(CFLAGS) src/filehighlighting.cpp -o $(OBJDIR)/filehighlighting.o

$(OBJDIR)/strconfig.o: $(HW) $(HS) $(HN) src/strconfig.cpp 
	$(CC) $(COPTS) -c $(CFLAGS) src/strconfig.cpp -o $(OBJDIR)/strconfig.o

$(OBJDIR)/strmasks.o: $(HW) $(HS) $(HN) src/strmasks.cpp 
	$(CC) $(COPTS) -c $(CFLAGS) src/strmasks.cpp -o $(OBJDIR)/strmasks.o

$(OBJDIR)/shl.o: $(HW) $(HS) $(HN) src/shl.cpp 
	$(CC) $(COPTS) -c $(CFLAGS) src/shl.cpp -o $(OBJDIR)/shl.o

$(OBJDIR)/toolbar.o: $(HW) $(HS) $(HN) src/toolbar.cpp 
	$(CC) $(COPTS) -c $(CFLAGS) src/toolbar.cpp -o $(OBJDIR)/toolbar.o
		
$(OBJDIR)/charsetdlg.o: $(HW) $(HS) $(HN) src/charsetdlg.cpp 
	$(CC) $(COPTS) -c $(CFLAGS) src/charsetdlg.cpp -o $(OBJDIR)/charsetdlg.o
	
$(OBJDIR)/ux_util.o: $(HW) $(HS) $(HN) src/ux_util.cpp 
	$(CC) $(COPTS) -c $(CFLAGS) src/ux_util.cpp -o $(OBJDIR)/ux_util.o
	
		
$(OBJDIR)/vfs.o: $(HW) $(HS) $(HN) src/vfs.cpp 
	$(CC) $(COPTS) -c $(CFLAGS) src/vfs.cpp -o $(OBJDIR)/vfs.o
	
$(OBJDIR)/vfspath.o: $(HW) $(HS) $(HN) src/vfspath.cpp 
	$(CC) $(COPTS) -c $(CFLAGS) src/vfspath.cpp -o $(OBJDIR)/vfspath.o
	
$(OBJDIR)/vfs-smb.o: $(HW) $(HS) $(HN) src/vfs-smb.cpp 
	$(CC) $(COPTS) -c $(CFLAGS) src/vfs-smb.cpp -o $(OBJDIR)/vfs-smb.o
	
$(OBJDIR)/vfs-tmp.o: $(HW) $(HS) $(HN) src/vfs-smb.cpp 
	$(CC) $(COPTS) -c $(CFLAGS) src/vfs-tmp.cpp -o $(OBJDIR)/vfs-tmp.o
	
$(OBJDIR)/tcp_sock.o: $(HW) $(HS) $(HN) src/tcp_sock.cpp 
	$(CC) $(COPTS) -c $(CFLAGS) src/tcp_sock.cpp -o $(OBJDIR)/tcp_sock.o
	
$(OBJDIR)/search-dlg.o: $(HW) $(HS) $(HN) src/search-dlg.cpp 
	$(CC) $(COPTS) -c $(CFLAGS) src/search-dlg.cpp -o $(OBJDIR)/search-dlg.o
	
$(OBJDIR)/search-tools.o: $(HW) $(HS) $(HN) src/search-tools.cpp 
	$(CC) $(COPTS) -c $(CFLAGS) src/search-tools.cpp -o $(OBJDIR)/search-tools.o

$(OBJDIR)/shell-tools.o: $(HW) $(HS) $(HN) src/shell-tools.cpp 
	$(CC) $(COPTS) -c $(CFLAGS) src/shell-tools.cpp -o $(OBJDIR)/shell-tools.o

$(OBJDIR)/vfs-ftp.o: $(HW) $(HS) $(HN) src/vfs-ftp.cpp 
	$(CC) $(COPTS) -c $(CFLAGS) src/vfs-ftp.cpp -o $(OBJDIR)/vfs-ftp.o
		
$(OBJDIR)/vfs-uri.o: $(HW) $(HS) $(HN) src/vfs-uri.cpp 
	$(CC) $(COPTS) -c $(CFLAGS) src/vfs-uri.cpp -o $(OBJDIR)/vfs-uri.o

$(OBJDIR)/vfs-sftp.o: $(HW) $(HS) $(HN) src/vfs-sftp.cpp 
	$(CC) $(COPTS) -c $(CFLAGS) src/vfs-sftp.cpp -o $(OBJDIR)/vfs-sftp.o

$(OBJDIR)/vfs-sftp2.o: $(HW) $(HS) $(HN) src/vfs-sftp2.cpp 
	$(CC) $(COPTS) -c $(CFLAGS) src/vfs-sftp2.cpp -o $(OBJDIR)/vfs-sftp2.o
		
$(OBJDIR)/nchistory.o: $(HW) $(HS) $(HN) src/nchistory.cpp 
	$(CC) $(COPTS) -c $(CFLAGS) src/nchistory.cpp -o $(OBJDIR)/nchistory.o
		
$(OBJDIR)/unicode_lc.o: $(HW) $(HS) $(HN) src/unicode_lc.cpp 
	$(CC) $(COPTS) -c $(CFLAGS) src/unicode_lc.cpp -o $(OBJDIR)/unicode_lc.o

$(OBJDIR)/usermenu.o: $(HW) $(HS) $(HN) src/usermenu.cpp 
	$(CC) $(COPTS) -c $(CFLAGS) src/usermenu.cpp -o $(OBJDIR)/usermenu.o

$(OBJDIR)/fileopers.o: $(HW) $(HS) $(HN) src/fileopers.cpp 
	$(CC) $(COPTS) -c $(CFLAGS) src/fileopers.cpp -o $(OBJDIR)/fileopers.o
	
	
$(OBJDIR)/ncdialogs.o: $(HW) $(HS) $(HN) src/ncdialogs.cpp 
	$(CC) $(COPTS) -c $(CFLAGS) src/ncdialogs.cpp -o $(OBJDIR)/ncdialogs.o

$(OBJDIR)/panel_list.o: $(HW) $(HS) $(HN) src/panel_list.cpp 
	$(CC) $(COPTS) -c $(CFLAGS) src/panel_list.cpp -o $(OBJDIR)/panel_list.o
		
$(OBJDIR)/panel.o: $(HW) $(HS) $(HN) src/panel.cpp 
	$(CC) $(COPTS) -c $(CFLAGS) src/panel.cpp -o $(OBJDIR)/panel.o

$(OBJDIR)/ncedit.o: $(HW) $(HS) $(HN) src/ncedit.cpp 
	$(CC) $(COPTS) -c $(CFLAGS) src/ncedit.cpp -o $(OBJDIR)/ncedit.o
	
$(OBJDIR)/ncview.o: $(HW) $(HS) $(HN) src/ncview.cpp 
	$(CC) $(COPTS) -c $(CFLAGS) src/ncview.cpp -o $(OBJDIR)/ncview.o
	

$(OBJDIR)/ncwin.o: $(HW) $(HS) $(HN) src/ncwin.cpp 
	$(CC) $(COPTS) -c $(CFLAGS) src/ncwin.cpp -o $(OBJDIR)/ncwin.o
	
	
$(OBJDIR)/t-emulator.o: $(HW) $(HS) $(HN) src/t-emulator.cpp 
	$(CC) $(COPTS) -c $(CFLAGS) src/t-emulator.cpp -o $(OBJDIR)/t-emulator.o

	
$(OBJDIR)/terminal.o: $(HW) $(HS) $(HN) src/terminal.cpp 
	$(CC) $(COPTS) -c $(CFLAGS) src/terminal.cpp -o $(OBJDIR)/terminal.o

$(OBJDIR)/termwin.o: $(HW) $(HS) $(HN) src/termwin.cpp 
	$(CC) $(COPTS) -c $(CFLAGS) src/termwin.cpp -o $(OBJDIR)/termwin.o

$(OBJDIR)/wal_tmpls.o: $(HW) src/wal/wal_tmpls.cpp
	$(CC) $(COPTS) -c $(CFLAGS) src/wal/wal_tmpls.cpp -o $(OBJDIR)/wal_tmpls.o

$(OBJDIR)/wal.o: $(HW) src/wal/wal.cpp
	$(CC) $(COPTS) -c $(CFLAGS) src/wal/wal.cpp -o $(OBJDIR)/wal.o

$(OBJDIR)/wal_charset.o: $(HW) src/wal/wal_charset.cpp
	$(CC) $(COPTS) -c $(CFLAGS) src/wal/wal_charset.cpp -o $(OBJDIR)/wal_charset.o

$(OBJDIR)/wal_sys_api.o: $(HW) src/wal/wal_sys_api.cpp
	$(CC) $(COPTS) -c $(CFLAGS) src/wal/wal_sys_api.cpp -o $(OBJDIR)/wal_sys_api.o

$(OBJDIR)/wal_exceptions.o: $(HW) src/wal/wal_exceptions.cpp
	$(CC) $(COPTS) -c $(CFLAGS) src/wal/wal_exceptions.cpp -o $(OBJDIR)/wal_exceptions.o

$(OBJDIR)/wal_files.o: $(HW) src/wal/wal_files.cpp
	$(CC) $(COPTS) -c $(CFLAGS) src/wal/wal_files.cpp -o $(OBJDIR)/wal_files.o


$(OBJDIR)/swl_button.o: $(HW) $(HS) src/swl/swl_button.cpp
	$(CC) $(COPTS) -c $(CFLAGS) src/swl/swl_button.cpp -o $(OBJDIR)/swl_button.o

$(OBJDIR)/swl_editline.o: $(HW) $(HS) src/swl/swl_editline.cpp
	$(CC) $(COPTS) -c $(CFLAGS) src/swl/swl_editline.cpp -o $(OBJDIR)/swl_editline.o

$(OBJDIR)/swl_combobox.o: $(HW) $(HS) src/swl/swl_combobox.cpp
	$(CC) $(COPTS) -c $(CFLAGS) src/swl/swl_combobox.cpp -o $(OBJDIR)/swl_combobox.o

$(OBJDIR)/swl_layout.o: $(HW) $(HS) src/swl/swl_layout.cpp
	$(CC) $(COPTS) -c $(CFLAGS) src/swl/swl_layout.cpp -o $(OBJDIR)/swl_layout.o


$(OBJDIR)/swl_menubox.o: $(HW) $(HS) src/swl/swl_menubox.cpp
	$(CC) $(COPTS) -c $(CFLAGS) src/swl/swl_menubox.cpp -o $(OBJDIR)/swl_menubox.o

$(OBJDIR)/swl_menutextinfo.o: $(HW) $(HS) src/swl/swl_menutextinfo.cpp
	$(CC) $(COPTS) -c $(CFLAGS) src/swl/swl_menutextinfo.cpp -o $(OBJDIR)/swl_menutextinfo.o

$(OBJDIR)/swl_popupmenu.o: $(HW) $(HS) src/swl/swl_popupmenu.cpp
	$(CC) $(COPTS) -c $(CFLAGS) src/swl/swl_popupmenu.cpp -o $(OBJDIR)/swl_popupmenu.o

$(OBJDIR)/swl_sbutton.o: $(HW) $(HS) src/swl/swl_sbutton.cpp
	$(CC) $(COPTS) -c $(CFLAGS) src/swl/swl_sbutton.cpp -o $(OBJDIR)/swl_sbutton.o

$(OBJDIR)/swl_scrollbar.o: $(HW) $(HS) src/swl/swl_scrollbar.cpp
	$(CC) $(COPTS) -c $(CFLAGS) src/swl/swl_scrollbar.cpp -o $(OBJDIR)/swl_scrollbar.o

$(OBJDIR)/swl_staticlabel.o: $(HW) $(HS) src/swl/swl_staticlabel.cpp
	$(CC) $(COPTS) -c $(CFLAGS) src/swl/swl_staticlabel.cpp -o $(OBJDIR)/swl_staticlabel.o

$(OBJDIR)/swl_textlist.o: $(HW) $(HS) src/swl/swl_textlist.cpp
	$(CC) $(COPTS) -c $(CFLAGS) src/swl/swl_textlist.cpp -o $(OBJDIR)/swl_textlist.o

$(OBJDIR)/swl_vlist.o: $(HW) $(HS) src/swl/swl_vlist.cpp
	$(CC) $(COPTS) -c $(CFLAGS) src/swl/swl_vlist.cpp -o $(OBJDIR)/swl_vlist.o

$(OBJDIR)/swl_winbase.o: $(HW) $(HS) src/swl/swl_winbase.cpp
	$(CC) $(COPTS) -c $(CFLAGS) src/swl/swl_winbase.cpp -o $(OBJDIR)/swl_winbase.o

$(OBJDIR)/swl_wincore.o: $(HW) $(HS) src/swl/swl_wincore.cpp
	$(CC) $(COPTS) -c $(CFLAGS) src/swl/swl_wincore.cpp -o $(OBJDIR)/swl_wincore.o

$(OBJDIR)/swl_wincoreUX.o: $(HW) $(HS) src/swl/swl_wincoreUX.cpp src/swl/swl_wincore_freetype_inc.h
	$(CC) $(COPTS) -c $(CFLAGS) src/swl/swl_wincoreUX.cpp -o $(OBJDIR)/swl_wincoreUX.o

$(OBJDIR)/nc.o: $(HW) $(HS) $(HN) src/nc.cpp src/internal_icons.inc
	$(CC) $(COPTS) -c $(CFLAGS) src/nc.cpp -o $(OBJDIR)/nc.o

$(OBJDIR)/shell.o: $(HW) $(HS) $(HN) src/shell.cpp 
	$(CC) $(COPTS) -c $(CFLAGS) src/shell.cpp -o $(OBJDIR)/shell.o
	
	
clean:
	rm -f $(OBJDIR)/*.o
	rm -f wcm
	rm -f src/libconf_ux.h
	rm -f src/libtester/libsmbtest
	rm -f src/libtester/libsmb40test
	rm -f src/libtester/libssh2test
	rm -f src/libtester/libfreetype_test
	rm -f src/info.txt

install: wcm
	$(INSTALL_DIR)	$(BIN_DIR)
	$(INSTALL_DIR)	$(TARGET_DIR)
	$(INSTALL_PROGRAM) wcm $(BIN_DIR)
	$(INSTALL_TREE) install-files/* $(TARGET_DIR)
